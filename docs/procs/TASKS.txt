# Cage Development Tasks

**Updated:** 2025-09-29
**Current Version:** 0.5.0
**Roadmap Reference:** docs/procs/ROADMAP.md (Stakeholder MVP Alignment)

## Story Point Scale
- 1 pt = 1-2 hours (simple fix/addition)
- 3 pts = 4-6 hours (moderate implementation)
- 5 pts = 1-2 days (complex feature)
- 8 pts = 3-5 days (major system component)

Status legend: ‚úÖ complete ¬∑ üü° partial/in progress ¬∑ üî¥ not started ¬∑ ‚è∏ deferred

---

## Phase 1 ‚Äì API Foundations & Parity

### CAGE-11: Operation Request API [5 pts] ‚úÖ
**Scope:** Typed request structs (Lock/Unlock/Rotate) plus `CageConfig` unifying CLI and library entry points.
**Status:** Landed. CLI, library, and docs use the shared builders; identity/recipient data flows end-to-end.

### CAGE-06: Config Helper & Discovery [5 pts] ‚úÖ
**Status:** `AgeConfig` now tracks the loaded source path, exposes helper methods, and a `cage config` CLI command provides `show`, `path`, and `paths` subcommands for inspection. README and library docs cover usage.
**Notes:** Future enhancement (optional) could add an interactive editor hook, but inspection workflows are complete.

### CAGE-12: Adapter V2 Refresh [5 pts] üü°
**Status:** V2 trait, compatibility wrapper, and ShellAdapterV2 implemented. Streaming works for passphrase + recipient flows; capability metadata exists. Remaining gaps:
- [x] Ensure `health_check`/factory expose accurate streaming + identity support flags.
- [ ] Implement identity-based streaming encrypt (currently passphrase-only) or mark limitation explicitly.
- [x] Harden error surfaces (stderr parsing, partial write-reporting).
**Implementation Notes:**
- Ignite relies on identity-based streaming when rotating repo/ignition keys. Either add the library path or clearly document the limitation in `docs/ref/cage/LIBRARY_USAGE.md`.
- Reference: `src/cage/adapter_v2.rs` TODO around `encrypt_stream_pipe_passphrase` plus Ignite rotation flows (`docs/ref/ignite/IGNITE_CONCEPTS.md`).

### QA-01: Documentation & Library Sync [3 pts] ‚úÖ
**Status:** README and `docs/ref/cage/LIBRARY_USAGE.md` now include streaming strategy tables, config helper guidance, and usage samples aligned with CLI flags.

### QA-03: Age CLI Output Sanity [1 pt] ‚úÖ
- [x] Add a lightweight sanity test that captures `age --version` / `age --help` output and verifies expected strings.
- [x] Document the reference snippet in QA notes (docs/qa/AGE_CLI_REFERENCE.md) so deviations are easy to spot during upgrades.
- [x] Gate the test to skip when the `age` binary is unavailable (consistent with other CLI-dependent checks).

---

## Phase 2 ‚Äì Advanced Encryption Capabilities

### CAGE-12a: Streaming Benchmark & Hardening [5 pts] üü°
**Status:** Pipe-based streaming landed with round-trip test. Bench harness + 1‚ÄØGB run complete; passphrase streaming remains limited by age's PTY requirements (see `.analysis/streaming_benchmark_results.md`).
- [x] Benchmark 1‚Äì5‚ÄØGB streams (passphrase + recipients) and record throughput/memory. (See `tests/test_streaming_benchmark.rs` + `.analysis/streaming_benchmark_results.md`.)
- [x] Add regression/bench harness (gated streaming benchmark test).
- [x] Surface capability hints in CLI (`cage adapter info` / `adapter health`).
- [x] Highlight recommended usage patterns (passphrase vs recipient streaming) in docs.

### CAGE-12b: Passphrase Streaming Behavior [3 pts] ‚úÖ
**Status:** Investigation shows age's PTY-bound passphrase flow prevents true pipe streaming; current temp-file fallback is the secure approach.
- [x] Document findings (`.analysis/CAGE-12b_investigation.md`, `adapter_v2_pipe_passphrase.rs`).
- [x] Update benchmarks to cover passphrase + file staging vs recipient + pipe.
- [x] Update README / LIBRARY_USAGE with guidance on when to use streaming vs file staging and note the passphrase limitation.

### CAGE-14: SSH Identity Support [5 pts] ‚úÖ
- [x] Accept `--ssh-identity` / config entries (file paths or inline material).
- [x] Convert SSH keys via age CLI (direct pass-through for SSH recipients).
- [x] Regression tests with generated SSH keypairs.
- [x] Documentation + security callouts.

### CAGE-15: Deterministic Key Derivation [5 pts] ‚è∏
- [ ] Extend config/request structs with derive parameters (salt/context).
- [ ] Wire derive support once the `age` crate backend lands (AGE-01). CLI-only implementation is deferred.
- [ ] Add tests verifying deterministic behaviour + error paths.
- [ ] Document usage guidance and salting requirements.
**Status:** Reprioritized to Phase 4 (native library backend). No current Padlock/Ignite dependency; keep spec handy in `docs/ref/cage/AGE_LIBRARY_MIGRATION.md`.

### CAGE-16: Multi-Recipient Lifecycle [8 pts] ‚úÖ **COMPLETED**
- [x] Formalize recipient group model (struct/enums) for request API + config.
- [x] Update adapters/CrudManager to accept recipient vectors for all encrypt ops.
- [x] Provide lifecycle helpers (list/add/remove recipients, audit metadata).
- [x] Tests ensuring each recipient can decrypt; include rotation scenarios.
**Priority:** üî∫ Required for Ignite ‚Üí Padlock rotations (repo & distro keys).
**Status:** ‚úÖ **COMPLETED** - Full implementation with 11 comprehensive tests
**Implementation Notes:**
- Define recipient group manifests keyed by tier (X/M/R/I/D). See `docs/ref/ignite/IGNITE_CONCEPTS.md` ¬ß4 and `docs/ref/padlock/PADLOCK_CONCEPTS.md` ¬ß5.
- Add config support for sets in `AgeConfig` + `cage.toml` (Padlock expects `.padlock` extension defaults).
- Ensure `cage adapter info` reports group counts so Ignite can validate before rotations.

### CAGE-13: Streaming CLI Options [5 pts] ‚úÖ
- [x] Expose streaming flags/config toggles (e.g., `--streaming-strategy`, already parsed) with doc coverage.
- [x] Wire strategy selection into requests + capability reporting.
- [x] Extend CLI help/README with streaming workflow guidance.

---

## Phase 3 ‚Äì Hardening & Tooling

### SEC-01: Centralized String Management [5 pts] üü°
**Status:** `src/cage/strings.rs` exists and houses many reusable constants, but glyph/emoji output intentionally retained for UX. Audit and guidance complete, migration ongoing.
- [x] Create shared string module.
- [x] Audit remaining inline literals in critical modules (705 candidates found).
- [x] Provide lint/check scripts (check_inline_strings.sh, check_todos.sh).
- [x] Document expectations in docs/dev/STRING_MANAGEMENT.md.
- [ ] Evaluate optional "ASCII-safe" mode without forcing removal of branded glyphs.
- [ ] Migrate high-priority user-facing strings from audit results.
**Implementation Notes:**
- Focus migrations on CLI messages surfaced in Padlock/Ignite UIs (`src/bin/cli_age.rs`, `src/cage/lifecycle/crud_manager.rs`).
- Document ASCII-safe toggle behaviour; Padlock UI will eventually need plain-text mode for logs.
- Use `scripts/check_inline_strings.sh --verbose` to prioritize the top offenders (304 in CLI, 182 in CrudManager).

### CAGE-03: Backup Retention Lifecycle [5 pts] üü°
**Reference:** `docs/ref/cage/BACKUP_RETENTION_DESIGN.md`
**Status:** RetentionPolicy enum + basic enforcement wired into `BackupManager`; registry, conflict strategy, and CLI ergonomics remain.
- [x] Add retention enum + enforcement hooks in `BackupManager`.
- [x] Support configurable backup directories and cleanup defaults via `AgeConfig`.
- [ ] Implement JSON-backed `BackupRegistry` with generation tracking.
- [ ] Apply retention when creating backups; archive/delete expired entries safely.
- [ ] Add backup discovery helpers (list/restore generations) for future CLI use.
- [ ] Write integration tests covering retention + migration from legacy `.bak` files.
**Implementation Notes:**
- Ignite manifest audits expect Cage to expose prior generations; design registry structure in line with `docs/ref/cage/BACKUP_RETENTION_DESIGN.md` ¬ß3.
- CLI UX: provide `cage backup list` (even if minimal) so Padlock can surface restore points.
- Tests: simulate lock/unlock cycles with retention policies to verify cleanup + registry updates.

### OBS-01: Structured Audit & Telemetry [3 pts] ‚úÖ
- [x] Capture streaming/identity/recipient events with structured metadata.
- [x] Ensure sensitive fields are redacted before logging.
- [x] Offer JSON/structured output toggle for downstream systems.
- [x] Update docs with telemetry configuration.
**Priority:** üî∫ Padlock/Ignite need machine-readable audit trails.
**Status:** ‚úÖ Complete. JSON telemetry implemented with extended metadata support (streaming strategy, authority tier).
**Implementation Notes:**
- Extended `AuditLogger` with JSON format support for all major operations.
- Added `log_encryption_event_extended()` and `log_decryption_event_extended()` with streaming/authority tier metadata.
- All log methods now support both Text and JSON formats via `TelemetryFormat` enum.
- Sensitive fields automatically redacted (recipient public keys hashed with MD5 for audit trail).
- Telemetry format wired from `AgeConfig` to `CrudManager`.
- Documentation updated: README + `docs/ref/cage/LIBRARY_USAGE.md` with JSON examples.
- 4 new tests covering JSON telemetry output (total: 87 library tests passing).

### QA-02: End-to-End Test Coverage [3 pts] ‚úÖ
(Retires legacy TEST-01/02/03/04 entries; replans under single umbrella.)
- [x] Restore CLI smoke suite targeting the installed `cage` binary.
- [x] Add proxy PTY scenarios with skip gating when `age`/PTY (or `age-keygen`) are missing.
- [x] Confirm age-dependent tests skip gracefully (selective unlock already uses `which::which`).
- [x] Expand regression coverage for BUG-01..05 behaviours (extensions, recursion, globs, unlock options).
**Status:** ‚úÖ Complete. Framework complete with 7 passing tests, 2 properly ignored (BUG-02/03 awaiting feature impl). All BUG-01/04 regression coverage validated.
**Follow-up:** CLI-01 completed (RSB flag syntax fixed). See `.analysis/QA-02_CLI_SMOKE_TESTS.md`.
**Implementation Notes:**
- Bring back `bin/test.sh run smoke` coverage; ensure it writes artifacts under `target/tmp` to avoid repo pollution.
- Capture fixtures covering `.padlock` extension so Padlock integration tests reuse them.
- Ensure PTY-dependent tests print clear skip reasons (`Skipping: PTY unavailable (CI sandbox)`).
- Reference `UAT_REPORT_SESSION3.md` for the current test inventory.

### DOC-03: Library Usage Accuracy [1 pt] ‚úÖ
- [x] Mention request API and streaming basics.
- [x] Clearly mark SSH/derive/multi-recipient status (SSH complete, others roadmap).
- [x] Add configuration helper usage (documented in section 4).

### CONFIG-01: TOML Recipient Group Convenience [3 pts] ‚è∏
- [ ] Formalize optional `recipient_groups` TOML schema for Cage users.
- [ ] Document usage as experimental (no CLI flag; config-only convenience).
- [ ] Ensure JSON registry (CAGE-03) remains the primary persistence path for Ignite/Padlock.
**Notes:** Optional backlog item for future polish; deprioritized relative to QA-02, CAGE-03, CAGE-12.

---

## Module Spec Alignment (MOD3 Series)

### MOD3-01: Establish Project Prelude [2 pts] ‚úÖ
**Reference:** `docs/ref/rsb/MODULE_SPEC.md`
- [x] Create `src/prelude.rs` that curates the public surface (CrudManager, requests, adapter traits, helpers).
- [x] Update `lib.rs` to re-export via `pub mod prelude` and document usage in README/Library Usage docs.
- [x] Verified crate consumers can compile simple examples via `use cage::prelude::*`.

### MOD3-02: Dependency Re-export Surface [2 pts] ‚úÖ
- [x] Introduced `src/deps.rs` (standard RSB pattern) re-exporting external crates we expect downstream users to consume (`age`, `rsb`, `hub`).
- [x] Documented optional/common re-exports and version guardrails in module docs.
- [x] Updated internal call sites to reference shared deps via `crate::deps` where beneficial.

### MOD3-03: Relocate Driver Example [1 pt] ‚úÖ
- [x] Move `src/driver.rs` demo into either `src/bin` or `examples/` to satisfy the "no stray top-level modules" rule in the module spec.
- [x] Update docs referencing the driver (if any) to the new path.
- [x] Ensure integration tests or demos still compile after relocation.

### MOD3-04: Harden PTY Automator [3 pts] ‚úÖ
- [x] Make PTY timeouts configurable (derive from `AgeConfig`) and avoid premature failures on long streams.
- [x] Improve prompt detection (case-insensitive / regex) and capture age stderr for debugging.
- [x] Audit error surfaces so PTY/TTY permission issues return actionable messages.
- [x] Evaluate non-blocking read strategy to remove busy-wait sleeps.

---

## Completed / Archived (for reference)
- BUG-01..05 ‚Äì Critical CLI regressions resolved mid-2025.
- CAGE-11a ‚Äì Identity/recipient request parity.
- INFRA-01 ‚Äì RSB terminal-ext integration.
- TEST-04 ‚Äì Age availability gating incorporated into selective unlock tests.

---

## Phase 4 ‚Äì Age Library Migration (Planned)

### AGE-01: Library Adapter Implementation [5 pts] üî¥
- [ ] Build a new adapter implementation that wraps `age::Encryptor` / `age::Decryptor` APIs for file and streaming workflows.
- [ ] Preserve request/response semantics so CrudManager and request structs remain unchanged.
- [ ] Keep the existing shell-based adapter available as a fallback strategy until feature parity is validated.
**Implementation Notes:**
- Start with passphrase + recipient flows; reuse streaming helpers from `ShellAdapterV2`.
- Gate under config flag (`backend = "cli" | "library"`).
- Tests should compare CLI vs library ciphertext for regressions.

### AGE-02: Passphrase & Identity Bridging [3 pts] üî¥
- [ ] Reuse PassphraseManager/PTY automation to supply secrets directly to the age crate.
- [ ] Wire SSH identities and multi-file identity bundles through the crate‚Äôs recipients/identities API.
- [ ] Provide configuration flags to opt into either CLI or library backend per environment.

### AGE-03: Capability & Plugin Surface [3 pts] üî¥
- [ ] Mirror capability reporting (streaming, SSH, plugins, derived keys) using crate introspection instead of CLI probing.
- [ ] Detect available plugins (e.g., age-plugin-yubikey) when running via the library path and expose consistent health info.
- [ ] Document the fallback matrix so users understand when the CLI backend is still required.

### AGE-04: Parity Validation & Rollout [5 pts] üî¥
- [ ] Add regression suite comparing CLI-vs-library outputs for representative operations (passphrase, recipients, SSH, armor, streaming).
- [ ] Update docs (Library Usage, README) to describe backend selection and limitations.
- [ ] Graduate the library backend to default once test suite and UAT confirm parity; retain CLI path as optional escape hatch.

## Phase 3 ‚Äì Optional Enhancements (Backlog)

### CONFIG-01: TOML Recipient Group Convenience [3 pts] ‚è∏
- [ ] Formalize optional `recipient_groups` TOML schema for Cage users.
- [ ] Document usage as experimental (no CLI flag; config-only convenience).
- [ ] Ensure JSON registry (CAGE-03) remains the primary persistence path for Ignite/Padlock.
**Notes:** Optional backlog item for future polish; deprioritized relative to QA-02, CAGE-03, CAGE-12.

### CLI-01: RSB Flag Alignment [3 pts] ‚úÖ
- [x] Updated test suite to use correct RSB `--flag=value` syntax (equals sign required).
- [x] Verified all CLI flags work with request structs (lock/unlock operations validated).
- [x] All QA-02 smoke tests now passing with correct flag format.
**Notes:** Completed. Tests now use `--recipient=value` instead of `--opt-recipient value`. All BUG-01/04 regression tests re-enabled and passing.

## Phase 3 ‚Äì Optional Enhancements (Backlog)

### CONFIG-01: TOML Recipient Group Convenience [3 pts] ‚è∏
- [ ] Formalize optional `recipient_groups` TOML schema for Cage users.
- [ ] Document usage as experimental (no CLI flag; config-only convenience).
- [ ] Ensure JSON registry (CAGE-03) remains the primary persistence path for Ignite/Padlock.
**Notes:** Optional backlog item for future polish; deprioritized relative to QA-02, CAGE-03, CAGE-12.

### CLI-01: RSB Flag Alignment [3 pts] ‚úÖ
- [x] Updated test suite to use correct RSB `--flag=value` syntax (equals sign required).
- [x] Verified all CLI flags work with request structs (lock/unlock operations validated).
- [x] All QA-02 smoke tests now passing with correct flag format.
**Notes:** Completed. Tests now use `--recipient=value` instead of `--opt-recipient value`. All BUG-01/04 regression tests re-enabled and passing.
