# Cage Development Tasks

**Updated:** 2025-09-28
**Current Version:** 0.5.0
**Roadmap Reference:** docs/procs/ROADMAP.md (Stakeholder MVP Alignment)

## Story Point Scale
- 1 pt = 1-2 hours (simple fix/addition)
- 3 pts = 4-6 hours (moderate implementation)
- 5 pts = 1-2 days (complex feature)
- 8 pts = 3-5 days (major system component)

Status legend: ✅ complete · 🟡 partial/in progress · 🔴 not started · ⏸ deferred

---

## Phase 1 – API Foundations & Parity

### CAGE-11: Operation Request API [5 pts] ✅
**Scope:** Typed request structs (Lock/Unlock/Rotate) plus `CageConfig` unifying CLI and library entry points.
**Status:** Landed. CLI, library, and docs use the shared builders; identity/recipient data flows end-to-end.

### CAGE-06: Config Helper & Discovery [5 pts] ✅
**Status:** `AgeConfig` now tracks the loaded source path, exposes helper methods, and a `cage config` CLI command provides `show`, `path`, and `paths` subcommands for inspection. README and library docs cover usage.
**Notes:** Future enhancement (optional) could add an interactive editor hook, but inspection workflows are complete.

### CAGE-12: Adapter V2 Refresh [5 pts] 🟡
**Status:** V2 trait, compatibility wrapper, and ShellAdapterV2 implemented. Streaming works for passphrase + recipient flows; capability metadata exists. Remaining gaps:
- [x] Ensure `health_check`/factory expose accurate streaming + identity support flags.
- [ ] Implement identity-based streaming encrypt (currently passphrase-only) or mark limitation explicitly.
- [x] Harden error surfaces (stderr parsing, partial write-reporting).

### QA-01: Documentation & Library Sync [3 pts] ✅
**Status:** README and `docs/ref/cage/LIBRARY_USAGE.md` now include streaming strategy tables, config helper guidance, and usage samples aligned with CLI flags.

### QA-03: Age CLI Output Sanity [1 pt] 🔴
- [ ] Add a lightweight sanity test that captures `age --version` / `age --help` output and verifies expected strings (`age v`, `Usage: age`, `--encrypt`, `--decrypt`).
- [ ] Document the reference snippet in QA notes so deviations are easy to spot during upgrades.
- [ ] Gate the test to skip when the `age` binary is unavailable (consistent with other CLI-dependent checks).

---

## Phase 2 – Advanced Encryption Capabilities

### CAGE-12a: Streaming Benchmark & Hardening [5 pts] 🟡
**Status:** Pipe-based streaming landed with round-trip test. Bench harness + 1 GB run complete; passphrase streaming remains limited by age's PTY requirements (see `.analysis/streaming_benchmark_results.md`).
- [x] Benchmark 1–5 GB streams (passphrase + recipients) and record throughput/memory. (See `tests/test_streaming_benchmark.rs` + `.analysis/streaming_benchmark_results.md`.)
- [x] Add regression/bench harness (gated streaming benchmark test).
- [x] Surface capability hints in CLI (`cage adapter info` / `adapter health`).
- [x] Highlight recommended usage patterns (passphrase vs recipient streaming) in docs.

### CAGE-12b: Passphrase Streaming Behavior [3 pts] ✅
**Status:** Investigation shows age's PTY-bound passphrase flow prevents true pipe streaming; current temp-file fallback is the secure approach.
- [x] Document findings (`.analysis/CAGE-12b_investigation.md`, `adapter_v2_pipe_passphrase.rs`).
- [x] Update benchmarks to cover passphrase + file staging vs recipient + pipe.
- [x] Update README / LIBRARY_USAGE with guidance on when to use streaming vs file staging and note the passphrase limitation.

### CAGE-14: SSH Identity Support [5 pts] ✅
- [x] Accept `--ssh-identity` / config entries (file paths or inline material).
- [x] Convert SSH keys via age CLI (direct pass-through for SSH recipients).
- [x] Regression tests with generated SSH keypairs.
- [x] Documentation + security callouts.

### CAGE-15: Deterministic Key Derivation [5 pts] 🔴
- [ ] Extend config/request structs with derive parameters (salt/context).
- [ ] Invoke age binary with `--derive` and capture outputs.
- [ ] Add tests verifying deterministic behaviour + error paths.
- [ ] Document usage guidance and salting requirements.

### CAGE-16: Multi-Recipient Lifecycle [8 pts] 🔴
- [ ] Formalize recipient group model (struct/enums) for request API + config.
- [ ] Update adapters/CrudManager to accept recipient vectors for all encrypt ops.
- [ ] Provide lifecycle helpers (list/add/remove recipients, audit metadata).
- [ ] Tests ensuring each recipient can decrypt; include rotation scenarios.

### CAGE-13: Streaming CLI Options [5 pts] ✅
- [x] Expose streaming flags/config toggles (e.g., `--streaming-strategy`, already parsed) with doc coverage.
- [x] Wire strategy selection into requests + capability reporting.
- [x] Extend CLI help/README with streaming workflow guidance.

---

## Phase 3 – Hardening & Tooling

### SEC-01: Centralized String Management [5 pts] 🟡
**Status:** `src/cage/strings.rs` exists and houses many reusable constants, but glyph/emoji output intentionally retained for UX. Remaining work focuses on linting + guidance.
- [x] Create shared string module.
- [ ] Audit remaining inline literals in critical modules.
- [ ] Provide lint/check (e.g., deny `todo!` or custom script) to flag new inline strings.
- [ ] Document expectations in CONTRIBUTING/PROCESS.
- [ ] Evaluate optional “ASCII-safe” mode without forcing removal of branded glyphs.

### CAGE-03: Backup Retention Lifecycle [5 pts] 🟡
**Reference:** `docs/ref/cage/BACKUP_RETENTION_DESIGN.md`
**Status:** RetentionPolicy enum + basic enforcement wired into `BackupManager`; registry, conflict strategy, and CLI ergonomics remain.
- [x] Add retention enum + enforcement hooks in `BackupManager`.
- [x] Support configurable backup directories and cleanup defaults via `AgeConfig`.
- [ ] Implement JSON-backed `BackupRegistry` with generation tracking.
- [ ] Apply retention when creating backups; archive/delete expired entries safely.
- [ ] Add backup discovery helpers (list/restore generations) for future CLI use.
- [ ] Write integration tests covering retention + migration from legacy `.bak` files.

### OBS-01: Structured Audit & Telemetry [3 pts] 🔴
- [ ] Capture streaming/identity/recipient events with structured metadata.
- [ ] Ensure sensitive fields are redacted before logging.
- [ ] Offer JSON/structured output toggle for downstream systems.
- [ ] Update docs with telemetry configuration.

### QA-02: End-to-End Test Coverage [3 pts] 🔴
(Retires legacy TEST-01/02/03/04 entries; replans under single umbrella.)
- [ ] Restore CLI smoke suite targeting the installed `cage` binary.
- [ ] Expand regression coverage for BUG-01..05 behaviours (extensions, recursion, globs, unlock options).
- [ ] Add proxy PTY scenarios with skip gating when `age`/PTY missing.
- [ ] Confirm age-dependent tests skip gracefully (selective unlock already uses `which::which`).

### DOC-03: Library Usage Accuracy [1 pt] 🟡
- [x] Mention request API and streaming basics.
- [ ] Clearly mark SSH/derive/multi-recipient as roadmap items until implemented.
- [ ] Add configuration helper usage once CAGE-06 ships.

---

## Module Spec Alignment (MOD3 Series)

### MOD3-01: Establish Project Prelude [2 pts] 🔴
**Reference:** `docs/ref/rsb/MODULE_SPEC.md`
- [ ] Create `src/prelude.rs` that curates the public Surface (CrudManager, requests, adapter traits, macros).
- [ ] Update `lib.rs` to re-export via `pub mod prelude` and document usage in README.
- [ ] Add sanity tests ensuring prelude compilations stay minimal.

### MOD3-02: Dependency Re-export Surface [2 pts] 🔴
- [ ] Introduce `src/deps.rs` (standard RSB pattern) re-exporting external crates we expect downstream users to consume (`age`, `rsb`, `hub`).
- [ ] Audit modules to pull shared imports via `crate::deps` where appropriate.
- [ ] Note intentionally excluded crates (e.g., heavy optional deps) in the module doc comment.

### MOD3-03: Relocate Driver Example [1 pt] ✅
- [x] Move `src/driver.rs` demo into either `src/bin` or `examples/` to satisfy the "no stray top-level modules" rule in the module spec.
- [x] Update docs referencing the driver (if any) to the new path.
- [x] Ensure integration tests or demos still compile after relocation.

### MOD3-04: Harden PTY Automator [3 pts] ✅
- [x] Make PTY timeouts configurable (derive from `AgeConfig`) and avoid premature failures on long streams.
- [x] Improve prompt detection (case-insensitive / regex) and capture age stderr for debugging.
- [x] Audit error surfaces so PTY/TTY permission issues return actionable messages.
- [x] Evaluate non-blocking read strategy to remove busy-wait sleeps.

---

## Completed / Archived (for reference)
- BUG-01..05 – Critical CLI regressions resolved mid-2025.
- CAGE-11a – Identity/recipient request parity.
- INFRA-01 – RSB terminal-ext integration.
- TEST-04 – Age availability gating incorporated into selective unlock tests.
