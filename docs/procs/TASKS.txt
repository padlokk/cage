# Cage Development Tasks

**Updated:** 2025-09-27
**Current Version:** 0.3.1
**Status:** Planning Refresh (CAGE/BUG/TEST series)

## Story Point Scale
- 1 pt = 1-2 hours (simple fix/addition)
- 3 pts = 4-6 hours (moderate implementation)
- 5 pts = 1-2 days (complex feature)
- 8 pts = 3-5 days (major system component)

---

## Critical Bugs (Blocking Production)

### BUG-01: Preserve Original Extensions During Lock/Unlock [3 pts] âœ…
**Status:** Complete â€“ `lock_single_file` now appends the configured suffix and `unlock_single_file` only strips that suffix (`src/cage/lifecycle/crud_manager.rs:856`, `src/cage/lifecycle/crud_manager.rs:939`). Regression coverage still recommended.

### BUG-02: Recursive Operations Ignore Subdirectories [5 pts] âœ…
**Status:** Complete â€“ Depth-first traversal with glob support is live (`src/cage/lifecycle/crud_manager.rs:1212`).

### BUG-03: Pattern Filters Treat Globs as Literal Substrings [3 pts] âœ…
**Status:** Complete â€“ `globset` matcher is used for lock/unlock/status/verify (`src/cage/lifecycle/crud_manager.rs:1203`).

### BUG-04: Unlock Options Ignored [3 pts] ðŸŸ¡
**Status:** Implementation merged (selective unlock + regression suite); tests now skip cleanly when `age` is unavailable. ASCII-only logging still outstanding.
**Next Actions:**
- [ ] Replace non-ASCII log output in selective mode with ASCII-only messaging (`src/cage/lifecycle/crud_manager.rs:1319`).
- [x] Ensure selective unlock tests skip gracefully when the `age` binary is unavailable.

### BUG-05: Proxy Command Still Uses Expect Script [5 pts] âœ…
**Status:** Complete â€“ Proxy command now routes through `PtyAgeAutomator` (`src/bin/cli_age.rs:993`). Follow-up tests still pending (see TEST-03).

---

## Core Feature Work (CAGE Series)

### CAGE-01: Implement Key Rotation Lifecycle [8 pts]
**Source:** Former TASK-001 (`src/cage/lifecycle/crud_manager.rs:196-400`).
**Deliverables:** Atomic oldâ†’new passphrase rotation with backup/rollback, permission preservation, and coverage.

### CAGE-02: File Integrity Verification System [5 pts]
**Source:** Former TASK-002 (`src/cage/lifecycle/crud_manager.rs:1000-1106`).
**Deliverables:** Header/format validation, optional decrypt probe, structured reporting, and corruption handling.

### CAGE-03: Backup & Recovery Pipeline [5 pts] ðŸŸ¡
**Status:** Retention policy wiring now runs after each backup and honors config defaults. Conflict generation/registry work remains.
**Tasks:**
- [x] Implement retention policies with customizable retention settings.
- [x] Add configurable backup directories with safe defaults.
- [ ] Provide conflict-resolution strategies for existing backups.
- [x] Wire `RetentionPolicy` evaluation into backup cleanup on lock/unlock operations.

### CAGE-04: In-Place Operation Safety Layers [5 pts]
**Location:** `src/bin/cli_age.rs:569-760`, `src/cage/in_place.rs`.
**Scope:** Finish SafetyValidator/RecoveryManager wiring, ensure metadata preservation, document danger mode, and test rollback.

### CAGE-05: Progress & Telemetry Surface [3 pts]
**Location:** Progress manager utilities.
**Scope:** Integrate spinner/bar styles with CRUD operations, respect verbosity flags, and expose hooks for long jobs.

### CAGE-06: Configuration File Support [5 pts] ðŸŸ¡
**Status:** `AgeConfig` now loads from standard config paths (TOML) with settings for backups/streaming; CLI surface for editing/inspection still pending.

### CAGE-07: RageAdapter Implementation [8 pts]
**Status:** Deferred backlog â€“ Rage adapter remains a stub returning `AdapterNotImplemented` (`src/cage/adapter.rs:128`).

[5] CAGE-08: Multi-Recipient Encryption Support [Backlog]
**Location:** Adapter + CRUD pipeline + CLI
**Scope:** Allow callers (e.g., Ignite) to supply multiple `age` recipients so parents retain access to child-encrypted artifacts.
**Tasks:**
- [ ] Extend `AgeAdapter` / `CrudManager` to accept `Vec<Recipient>` and invoke `age` in public-key mode.
- [ ] Update proxy command to forward recipient sets rather than single passphrase.
- [ ] Extend CLI/config to accept recipient lists.
- [ ] Add tests ensuring each recipient can decrypt (parent + child scenario).

[4] CAGE-09: SSH Recipient Integration [Backlog]
**Location:** Adapter + CLI
**Scope:** Support SSH-derived age recipients alongside native `.age` keys so Ignite and future clients can mix credential types.
**Tasks:**
- [ ] Provide conversion from SSH public keys to age recipients.
- [ ] Document CLI usage / config knobs.
- [ ] Tests covering encrypt/decrypt with SSH recipients.

[4] CAGE-10: Identity Key Support (Backlog)
**Location:** Adapter + CRUD pipeline + CLI
**Scope:** Provide first-class identity/key-file flows (Age `--identity`) so unlock/no-passphrase operations work without proxy handoffs.
**Tasks:**
- [ ] Extend CRUD interfaces to accept identity files for decrypt/verify.
- [ ] Update `PtyAgeAutomator` to invoke `age -d -i` when identities supplied.
- [ ] Surface CLI flags and config for identity management.
- [ ] Add regression tests covering identity-driven unlock.

### CAGE-11: CageConfig & Operation Request API [5 pts] âœ…
**Location:** `src/cage/config.rs`, `src/cage/lifecycle/`
**Scope:** Introduce `CageConfig` and typed request structs (LockRequest, UnlockRequest, RotateRequest) to unify CLI and library entry points.
**Status:** Request API + CLI now cover passphrase, identity, and recipient flows; follow-on enhancements live under CAGE-11a/12.
**Tasks:**
- [x] Design request structs covering existing CLI flags.
- [x] Refactor `CrudManager` methods to accept request structs.
- [x] Provide builder/compatibility helpers for CLI usage.
- [x] Update docs/examples in `docs/LIBRARY_USAGE.md`.
- [x] Allow request handling for identity files and SSH keys.
- [x] Propagate recipient sets from requests into adapter calls.

### CAGE-12: Adapter Interface Refresh [5 pts] ðŸŸ¡
**Location:** `src/cage/adapter.rs`, `src/cage/age_engine.rs`
**Scope:** Extend `AgeAdapter` to support file + streaming operations with a unified trait.
**Status:** V2 trait + compatibility wrapper landed; identity-based encryption/SSH flows return `AdapterNotImplemented`, streaming depends on temp-file staging.
**Tasks:**
- [x] Add stream-based methods (Reader/Writer) to the trait.
- [x] Wrap existing Shell adapter with V2 compatibility.
- [x] Implement basic streaming encrypt/decrypt in ShellAdapterV2 (passphrase flows).
- [ ] Extend streaming to support identity files / recipients end-to-end.
- [ ] Ensure health checks & factory expose accurate capability flags.
- [ ] Replace temp-file staging with true streaming.

### CAGE-13: Streaming Encryption & Decryption [8 pts]
**Location:** Adapter + CRUD pipeline + CLI
**Scope:** Deliver streaming support end-to-end, including request options and regression tests.
**Tasks:**
- [ ] Add streaming options to request structs and CLI flags.
- [ ] Implement streaming encrypt/decrypt flows with age binary pipes.
- [ ] Create regression tests using in-memory buffers and large-file fixtures.
- [ ] Document usage patterns and performance guidance.

### CAGE-14: SSH Identity Support [5 pts]
**Location:** Adapter + config + CLI
**Scope:** Accept SSH identities for encrypt/decrypt across API and CLI.
**Tasks:**
- [ ] Implement identity parsing/validation (CLI + config).
- [ ] Wire identities through adapter and request structs.
- [ ] Add regression tests with sample SSH keys.
- [ ] Update documentation and warnings around key management.

### CAGE-15: Deterministic Key Derivation [5 pts]
**Location:** Adapter + config + CLI
**Scope:** Support age derived keys (`--derive`) through configuration and runtime flows.
**Tasks:**
- [ ] Extend config/request structs with derivation parameters (salt, context).
- [ ] Invoke age binary with derive options and handle output.
- [ ] Add tests verifying deterministic outputs and error cases.
- [ ] Document security considerations and defaults.

### CAGE-16: Multi-Recipient Lifecycle [8 pts]
**Location:** Adapter + CRUD pipeline + CLI
**Scope:** Implement lifecycle management for recipient groups, including inspection and rotation helpers.
**Tasks:**
- [ ] Model recipients and groups (structs/enums) for lock/unlock flows.
- [ ] Update adapters to accept recipient lists for encryption.
- [ ] Provide audit/reporting hooks for recipient metadata.
- [ ] Add tests ensuring each recipient can decrypt and lifecycle operations succeed.

### CAGE-11a: Identity & Recipient Parity [3 pts]
**Location:** `src/bin/cli_age.rs`, `src/cage/lifecycle/crud_manager.rs`
**Scope:** Ensure request API + CLI accept identity files, SSH keys, and recipient sets end-to-end.
**Tasks:**
- [x] Parse identity/recipient options in CLI flags and request builders.
- [x] Pass identity/recipient data through CrudManager into adapters.
- [x] Add regression tests covering identity-file decrypt and multi-recipient encrypt flows.

### CAGE-12a: True Streaming Implementation [5 pts]
**Location:** `src/cage/adapter_v2.rs`
**Scope:** Replace temp-file staging with stream piping to satisfy large-file workflows.
**Tasks:**
- [x] Implement pipe/buffer streaming for encrypt/decrypt across identities/recipients.
- [ ] Validate performance/memory on large fixtures; add regression coverage. (Partial: added pipe round-trip unit test; large fixture benchmark still pending.)
- [x] Update adapter capability reporting and user docs to reflect real streaming support.

---

## Test & Tooling Improvements (TEST Series)

### TEST-01: Align CLI Suites with Current Binary [3 pts]
**Status:** Pending â€“ scripts still invoke removed binaries.

### TEST-02: Regression Coverage for BUG-01..04 [3 pts]
**Scope:** Add targeted unit/integration tests to lock in newly fixed behaviours (extensions, recursion, globbing, unlock options).

### TEST-03: Proxy PTY Integration Tests [2 pts]
**Status:** Pending â€“ implement after stabilising proxy command.

### TEST-04: Gate Age-Dependent Unlock Tests [1 pt]
**Scope:** Keep BUG-04 regression suite while avoiding hard failures when `age` is missing.
**Tasks:**
- [ ] Detect `age` availability in `tests/test_selective_unlock.rs` and skip gracefully when absent.
- [ ] Document the dependency in TESTING notes / README.
- [ ] Ensure CI environments without `age` remain green.

---

## Future Infrastructure (INFRA Series)

### INFRA-01: Migrate to RSB dev-pty Module [COMPLETE via Hub] âœ…
**Background**: RSB 0.6.2 includes `dev-pty` feature with `rsb::dev::pty` module, but API exports don't match `portable-pty` interface.
**Solution**: Migrated to Hub's `terminal-ext` feature which provides `portable-pty` via RSB ecosystem.
**Benefits**: âœ… Achieved - Reduced dependency count, better RSB ecosystem integration via Hub.
**Status**: Completed using `hub = { git = "https://github.com/oodx/hub.git", features = ["terminal-ext"] }`.

### INFRA-02: Migrate to RSB Progress Module [3 pts]
**Location**: `src/cage/progress/*` â†’ `rsb::progress`
**Issue**: Cage maintains local copy of progress module (`cage::cage::progress`) that duplicates RSB's version.
**Tasks**:
- [ ] Replace `use cage::cage::progress` with `use rsb::progress` throughout codebase
- [ ] Remove `src/cage/progress/` directory (5 files: core, manager, mod, styles, terminal)
- [ ] Verify CAGE-05 progress integration still functions correctly
- [ ] Update documentation references from `cage::progress` to `rsb::progress`
**Benefits**: Reduced code duplication, leverage RSB ecosystem updates, cleaner dependency graph.

### SEC-01: Centralized String Management [5 pts]
**Location:** `src/cage/strings.rs` (new) + audit across modules
**Issue:** Sensitive/user-facing literals scattered across the codebase increase binary snooping risk.
**Tasks:**
- [ ] Create dedicated string constants module with clear naming.
- [ ] Migrate existing inline strings (CLI messages, errors, prompts) to the module.
- [ ] Add lint/check script to detect new inline strings in critical paths.
- [ ] Document guidelines in CONTRIBUTING/PROCESS.
- [ ] Replace emoji/glyph usage in CLI/log output with ASCII-safe strings.

### OBS-01: Structured Audit & Telemetry [3 pts]
**Location:** `src/cage/security.rs`, logging pathways
**Issue:** New features (streaming, identities, recipients) require expanded auditing without leaking secrets.
**Tasks:**
- [ ] Extend audit logger to capture new events with structured metadata.
- [ ] Ensure sensitive fields are scrubbed/redacted.
- [ ] Offer optional JSON logging for downstream ingestion.
- [ ] Update docs with observability configuration.

### DOC-03: Library Usage Accuracy [1 pt]
**Location:** `docs/LIBRARY_USAGE.md`
**Issue:** Documentation claims SSH identity/recipient streaming parity that is not yet implemented.
**Tasks:**
- [ ] Update streaming and SSH sections to reflect current limitations and roadmap.
- [ ] Link to CAGE-11a/CAGE-12a for planned parity work.
- [ ] Add callouts for test prerequisites (age binary availability).

---

## Notes
- Keep CHANGELOG entries aligned with CAGE/BUG/TEST identifiers.
- Prioritise BUG-01..05 before starting new CAGE work; they unblock documented scenarios.
- Coordinate config and backup changes with documentation updates in README and `docs/tech/*`.

[4] CAGE-10: Identity Key Support (Backlog)
**Location:** Adapter + CRUD pipeline + CLI
**Scope:** Provide first-class identity/key-file flows (Age `--identity`) so unlock/no-passphrase operations work without proxy handoffs.
**Tasks:**
- [ ] Extend CRUD interfaces to accept identity files for decrypt/verify.
- [ ] Update `PtyAgeAutomator` to invoke `age -d -i` when identities supplied.
- [ ] Surface CLI flags and config for identity management.
- [ ] Add regression tests covering identity-driven unlock.
