# Cage Development Tasks

**Updated:** 2025-09-29
**Current Version:** 0.5.0
**Roadmap Reference:** docs/procs/ROADMAP.md (Stakeholder MVP Alignment)

## Story Point Scale
- 1 pt = 1-2 hours (simple fix/addition)
- 3 pts = 4-6 hours (moderate implementation)
- 5 pts = 1-2 days (complex feature)
- 8 pts = 3-5 days (major system component)

Status legend: ‚úÖ complete ¬∑ üü° partial/in progress ¬∑ üî¥ not started ¬∑ ‚è∏ deferred

---

## Phase 1 ‚Äì API Foundations & Parity

### CAGE-11: Operation Request API [5 pts] ‚úÖ
**Scope:** Typed request structs (Lock/Unlock/Rotate) plus `CageConfig` unifying CLI and library entry points.
**Status:** Landed. CLI, library, and docs use the shared builders; identity/recipient data flows end-to-end.

### CAGE-06: Config Helper & Discovery [5 pts] ‚úÖ
**Status:** `AgeConfig` now tracks the loaded source path, exposes helper methods, and a `cage config` CLI command provides `show`, `path`, and `paths` subcommands for inspection. README and library docs cover usage.
**Notes:** Future enhancement (optional) could add an interactive editor hook, but inspection workflows are complete.

### CAGE-12: Adapter V2 Refresh [5 pts] ‚úÖ
**Status:** ‚úÖ Complete. Identity-based streaming encryption implemented with automatic recipient derivation.
- [x] Ensure `health_check`/factory expose accurate streaming + identity support flags.
- [x] Implement identity-based streaming encrypt via `identity_to_recipient()` helper.
- [x] Harden error surfaces (stderr parsing, partial write-reporting).
**Implementation Notes:**
- Identity-based encryption: When `Identity::IdentityFile` or `Identity::SshKey` provided without explicit recipients, adapter extracts public recipient using `age-keygen -y`
- Enables "self-encryption" workflows for Ignite key rotation scenarios
- Requires `age-keygen` binary on PATH
- Test coverage: `test_identity_based_streaming_encrypt()` validates round-trip correctness
- Documentation: Updated `LIBRARY_USAGE.md` with usage examples and performance notes
- File: `src/cage/adapter_v2.rs` (lines 869-911 helper, 540-550 integration, 1550-1611 tests)

### QA-01: Documentation & Library Sync [3 pts] ‚úÖ
**Status:** README and `docs/ref/cage/LIBRARY_USAGE.md` now include streaming strategy tables, config helper guidance, and usage samples aligned with CLI flags.

### QA-03: Age CLI Output Sanity [1 pt] ‚úÖ
- [x] Add a lightweight sanity test that captures `age --version` / `age --help` output and verifies expected strings.
- [x] Document the reference snippet in QA notes (docs/qa/AGE_CLI_REFERENCE.md) so deviations are easy to spot during upgrades.
- [x] Gate the test to skip when the `age` binary is unavailable (consistent with other CLI-dependent checks).

### CAGE-17: Rotate Request Integration [3 pts] ‚úÖ
- [x] Implemented `CageManager::rotate_with_request` with passphrase validation and feature gating for future enhancements.
- [x] Updated CLI `cmd_rotate` to construct `RotateRequest` builders so both surfaces share the same pipeline.
- [x] Added request API regression coverage (`test_rotate_with_request_api`) exercising passphrase rotation flows.
- [x] Refreshed library docs with request-based rotation examples (see `docs/ref/cage/LIBRARY_USAGE.md`).

---

## Phase 2 ‚Äì Advanced Encryption Capabilities

### CAGE-12a: Streaming Benchmark & Hardening [5 pts] üü°
**Status:** Pipe-based streaming landed with round-trip test. Bench harness + 1‚ÄØGB run complete; passphrase streaming remains limited by age's PTY requirements (see `.analysis/streaming_benchmark_results.md`).
- [x] Benchmark 1‚Äì5‚ÄØGB streams (passphrase + recipients) and record throughput/memory. (See `tests/test_streaming_benchmark.rs` + `.analysis/streaming_benchmark_results.md`.)
- [x] Add regression/bench harness (gated streaming benchmark test).
- [x] Surface capability hints in CLI (`cage adapter info` / `adapter health`).
- [x] Highlight recommended usage patterns (passphrase vs recipient streaming) in docs.

### CAGE-12b: Passphrase Streaming Behavior [3 pts] ‚úÖ
**Status:** Investigation shows age's PTY-bound passphrase flow prevents true pipe streaming; current temp-file fallback is the secure approach.
- [x] Document findings (`.analysis/CAGE-12b_investigation.md`, `adapter_v2_pipe_passphrase.rs`).
- [x] Update benchmarks to cover passphrase + file staging vs recipient + pipe.
- [x] Update README / LIBRARY_USAGE with guidance on when to use streaming vs file staging and note the passphrase limitation.

### CAGE-14: SSH Identity Support [5 pts] ‚úÖ
- [x] Accept `--ssh-identity` / config entries (file paths or inline material).
- [x] Convert SSH keys via age CLI (direct pass-through for SSH recipients).
- [x] Regression tests with generated SSH keypairs.
- [x] Documentation + security callouts.

### CAGE-21: CLI Keypair Generation Workflow [3 pts] üî¥
**Reference:** `docs/ref/cage/KEYGEN_STRATEGY.md` (¬ß2‚Äì¬ß3)
- [ ] Implement `cage keygen` that wraps `age-keygen` with opinionated defaults:
  - Default output: `${XDG_CONFIG_HOME}/cage/identities/<timestamp>.agekey` (resolve via existing config helpers) with `chmod 0o600` (or Windows equivalent) applied after write.
  - Capture public key via `age-keygen -y` and emit structured JSON (`path`, `public_recipient`, `fingerprint_md5`, `fingerprint_sha256`, `created_at`) to stdout; mirror details in audit logs.
- [ ] CLI UX rules: refuse to overwrite existing files unless `--force` (short `-f`) is provided; require explicit `--output` for non-default locations; display a summarized next-step hint for adding the recipient to a group.
- [ ] Error handling: detect missing `age-keygen` binary with actionable guidance; surface stderr from the subprocess in failure cases while ensuring secrets are not echoed back.
- [ ] Tests: add CLI integration coverage (`tests/cli/test_keygen.rs`) covering success, overwrite prevention, forced overwrite, custom output paths, and missing `age-keygen` scenarios; verify log entries land in audit log.
- [ ] Config integration: extend `AgeConfig` helpers to register the generated identity (optional `--register <group>` flag) by appending the derived recipient to the selected recipient group.
- [ ] Module layout: create `src/cage/keygen/{mod.rs,api.rs,error.rs,helpers.rs}` following `MODULE_SPEC.md`; ensure the CLI command uses this module rather than ad-hoc logic, and add unit tests within the module.

### CAGE-22: Adapter Identity Generation Hook [3 pts] ‚è∏
**Reference:** `docs/ref/cage/KEYGEN_STRATEGY.md` (¬ß4‚Äì¬ß7)
- [ ] When the library backend (AGE-01) lands, implement `AgeAdapterV2::generate_identity` using `age::x25519::Identity::generate()`, returning zeroizable secret material.
- [ ] Update `cage keygen` to detect adapter support and skip the external `age-keygen` process, while still honouring the same CLI flags, output layout, and logging.
- [ ] Provide a library-level helper that returns an in-memory `GeneratedIdentity { private: String, public: String }` without touching disk, and add doc examples (`docs/ref/cage/LIBRARY_USAGE.md`).
- [ ] Document downstream migration guidance (Padlock/Ignite) so services know when to switch from CLI-based keygen to the in-process path and what feature flags/config keys gate the behaviour.

### CAGE-15: Deterministic Key Derivation [5 pts] ‚è∏
- [ ] Extend config/request structs with derive parameters (salt/context).
- [ ] Wire derive support once the `age` crate backend lands (AGE-01). CLI-only implementation is deferred.
- [ ] Add tests verifying deterministic behaviour + error paths.
- [ ] Document usage guidance and salting requirements.
**Status:** Reprioritized to Phase 4 (native library backend). No current Padlock/Ignite dependency; keep spec handy in `docs/ref/cage/AGE_LIBRARY_MIGRATION.md`.

### CAGE-16: Multi-Recipient Lifecycle [8 pts] ‚úÖ **COMPLETED**
- [x] Formalize recipient group model (struct/enums) for request API + config.
- [x] Update adapters/CageManager to accept recipient vectors for all encrypt ops.
- [x] Provide lifecycle helpers (list/add/remove recipients, audit metadata).
- [x] Tests ensuring each recipient can decrypt; include rotation scenarios.
**Priority:** üî∫ Required for Ignite ‚Üí Padlock rotations (repo & distro keys).
**Status:** ‚úÖ **COMPLETED** - Full implementation with 11 comprehensive tests
**Implementation Notes:**
- Define recipient group manifests keyed by tier (X/M/R/I/D). See `docs/ref/ignite/IGNITE_CONCEPTS.md` ¬ß4 and `docs/ref/padlock/PADLOCK_CONCEPTS.md` ¬ß5.
- Add config support for sets in `AgeConfig` + `cage.toml` (Padlock expects `.padlock` extension defaults).
- Ensure `cage adapter info` reports group counts so Ignite can validate before rotations.

### CAGE-13: Streaming CLI Options [5 pts] ‚úÖ
- [x] Expose streaming flags/config toggles (e.g., `--streaming-strategy`, already parsed) with doc coverage.
- [x] Wire strategy selection into requests + capability reporting.
- [x] Extend CLI help/README with streaming workflow guidance.

### CAGE-18: Streaming API Parity [5 pts] ‚úÖ
- [x] Exposed streaming encrypt/decrypt helpers on `CageManager::stream_with_request` backed by `ShellAdapterV2`.
- [x] Added `cage stream encrypt|decrypt` CLI surface and refreshed README guidance.
- [x] Highlighted streaming availability in adapter inspection output.
- [x] Added request API regression coverage for streaming flows (passphrase fallback).

---

## Phase 3 ‚Äì Hardening & Tooling

### SEC-01: Centralized String Management [5 pts] üü°
**Status:** `src/cage/strings.rs` exists and houses many reusable constants, but glyph/emoji output intentionally retained for UX. Audit and guidance complete, migration ongoing.
- [x] Create shared string module.
- [x] Audit remaining inline literals in critical modules (705 candidates found).
- [x] Provide lint/check scripts (check_inline_strings.sh, check_todos.sh).
- [x] Document expectations in docs/dev/STRING_MANAGEMENT.md.
- [ ] Evaluate optional "ASCII-safe" mode without forcing removal of branded glyphs.
- [ ] Migrate high-priority user-facing strings from audit results.
**Implementation Notes:**
- Focus migrations on CLI messages surfaced in Padlock/Ignite UIs (`src/bin/cli_age.rs`, `src/cage/lifecycle/crud_manager.rs`).
- Document ASCII-safe toggle behaviour; Padlock UI will eventually need plain-text mode for logs.
- Use `scripts/check_inline_strings.sh --verbose` to prioritize the top offenders (304 in CLI, 182 in CageManager).

### CAGE-19: Deployment Script Hardening [2 pts] ‚úÖ
- [x] Update `bin/deploy.sh` to validate build artifacts, support `--prefix` overrides, and emit clear success/error messaging.
- [x] Support release/debug deployment via `--profile` (default: release).
- [x] Document usage in README and script help output.

### CAGE-20: CLI Init Workflow [3 pts] ‚úÖ
- [x] Implement full `cage init` behaviour: create required XDG config/data/cache directories and seed a default `cage.toml`.
- [x] Add idempotent checks so rerunning the command keeps user edits intact (offer `--force` when needed).
- [x] Provide smoke tests (or scripted checks) for the init command and capture usage in README/process docs.
**Notes:**
- New helper writes defaults via shared `perform_cage_init()` and respects `CAGE_CONFIG`, `XDG_*` overrides.
- `--force` and `-f` flags reset config content via RSB global context (`opt_force` / `opt_f`).
- Integration test `test_cage_init_creates_xdg_structure` verifies directory hydration and idempotence.

### CAGE-03: Backup Retention Lifecycle [5 pts] ‚úÖ
**Reference:** `docs/ref/cage/BACKUP_RETENTION_DESIGN.md`
**Status:** ‚úÖ Complete. JSON-backed registry, retention enforcement, and discovery helpers implemented.
- [x] Add retention enum + enforcement hooks in `BackupManager`.
- [x] Support configurable backup directories and cleanup defaults via `AgeConfig`.
- [x] Implement JSON-backed `BackupRegistry` with generation tracking.
- [x] Apply retention when creating backups; archive/delete expired entries safely.
- [x] Add backup discovery helpers (list/restore generations) for future CLI use.
- [x] Write integration tests covering retention (8/10 tests passing).
**Implementation Notes:**
- BackupRegistry persists to `.cage_backups.json` with atomic writes
- Retention policies: KeepAll, KeepDays(u32), KeepLast(usize), KeepLastAndDays{last, days}
- Generation tracking: auto-increments, sorted by creation time
- Discovery: `list_backups()` and `restore_backup_generation()` helpers
- Tests: 8 passing integration tests validate core retention logic
- File: `src/cage/lifecycle/crud_manager.rs` (lines 447-687)
**Implementation Notes:**
- Ignite manifest audits expect Cage to expose prior generations; design registry structure in line with `docs/ref/cage/BACKUP_RETENTION_DESIGN.md` ¬ß3.
- CLI UX: provide `cage backup list` (even if minimal) so Padlock can surface restore points.
- Tests: simulate lock/unlock cycles with retention policies to verify cleanup + registry updates.

### OBS-01: Structured Audit & Telemetry [3 pts] ‚úÖ
- [x] Capture streaming/identity/recipient events with structured metadata.
- [x] Ensure sensitive fields are redacted before logging.
- [x] Offer JSON/structured output toggle for downstream systems.
- [x] Update docs with telemetry configuration.
**Priority:** üî∫ Padlock/Ignite need machine-readable audit trails.
**Status:** ‚úÖ Complete. JSON telemetry implemented with extended metadata support (streaming strategy, authority tier).
**Implementation Notes:**
- Extended `AuditLogger` with JSON format support for all major operations.
- Added `log_encryption_event_extended()` and `log_decryption_event_extended()` with streaming/authority tier metadata.
- All log methods now support both Text and JSON formats via `TelemetryFormat` enum.
- Sensitive fields automatically redacted (recipient public keys hashed with MD5 for audit trail).
- Telemetry format wired from `AgeConfig` to `CageManager`.
- Documentation updated: README + `docs/ref/cage/LIBRARY_USAGE.md` with JSON examples.
- 4 new tests covering JSON telemetry output (total: 87 library tests passing).

### DOC-04: Library Usage Feature Sync [1 pt] üî¥
- [ ] Update `docs/ref/cage/LIBRARY_USAGE.md` feature matrix to reflect completed multi-recipient lifecycle and other shipped items.
- [ ] Cross-check README badges/sections to ensure status indicators match current implementation.
- [ ] Add note that deterministic key derivation remains deferred pending upstream age support (reference CAGE-15).

### DOC-05: Install & Config Guidance [1 pt] ‚úÖ
- [x] Clarify the `deploy.sh` + `cage init` workflow in README, PROCESS docs, and quick start materials.
- [x] Document expectations for library consumers (e.g., supplying `AgeConfig` manually) so downstream services understand the separation of concerns.
- [x] Ensure `docs/procs/CODEX_WARMUP.txt` and quick-reference materials stay in sync with the clarified guidance.
**Notes:** README build steps now call out `cage init`, PROCESS/QUICK_REF include bootstrap commands, and CODEX warmup highlights when to rerun `cage init --force`.

### DOC-06: CageManager Terminology Refresh [1 pt] üî¥
- [ ] Update README, Library Usage, Padlock integration docs, and roadmap/task references from `CageManager` to `CageManager`.
- [ ] Refresh warmup/process docs and feature matrices to reflect the new manager naming.
- [ ] Double-check helper scripts, examples, and code snippets so user-facing guidance stays consistent.

### QA-02: End-to-End Test Coverage [3 pts] ‚úÖ
(Retires legacy TEST-01/02/03/04 entries; replans under single umbrella.)
- [x] Restore CLI smoke suite targeting the installed `cage` binary.
- [x] Add proxy PTY scenarios with skip gating when `age`/PTY (or `age-keygen`) are missing.
- [x] Confirm age-dependent tests skip gracefully (selective unlock already uses `which::which`).
- [x] Expand regression coverage for BUG-01..05 behaviours (extensions, recursion, globs, unlock options).
**Status:** ‚úÖ Complete. Framework complete with 7 passing tests, 2 properly ignored (BUG-02/03 awaiting feature impl). All BUG-01/04 regression coverage validated.
**Follow-up:** CLI-01 completed (RSB flag syntax fixed). See `.analysis/QA-02_CLI_SMOKE_TESTS.md`.
**Implementation Notes:**
- Bring back `bin/test.sh run smoke` coverage; ensure it writes artifacts under `target/tmp` to avoid repo pollution.
- Capture fixtures covering `.padlock` extension so Padlock integration tests reuse them.
- Ensure PTY-dependent tests print clear skip reasons (`Skipping: PTY unavailable (CI sandbox)`).
- Reference `UAT_REPORT_SESSION3.md` for the current test inventory.

### DOC-03: Library Usage Accuracy [1 pt] ‚úÖ
- [x] Mention request API and streaming basics.
- [x] Clearly mark SSH/derive/multi-recipient status (SSH complete, others roadmap).
- [x] Add configuration helper usage (documented in section 4).

### CONFIG-01: TOML Recipient Group Convenience [3 pts] ‚è∏
- [ ] Formalize optional `recipient_groups` TOML schema for Cage users.
- [ ] Document usage as experimental (no CLI flag; config-only convenience).
- [ ] Ensure JSON registry (CAGE-03) remains the primary persistence path for Ignite/Padlock.
**Notes:** Optional backlog item for future polish; deprioritized relative to QA-02, CAGE-03, CAGE-12.

---

## Module Spec Alignment (MOD3 Series)

### MOD3-01: Establish Project Prelude [2 pts] ‚úÖ
**Reference:** `docs/ref/rsb/MODULE_SPEC.md`
- [x] Create `src/prelude.rs` that curates the public surface (CageManager, requests, adapter traits, helpers).
- [x] Update `lib.rs` to re-export via `pub mod prelude` and document usage in README/Library Usage docs.
- [x] Verified crate consumers can compile simple examples via `use cage::prelude::*`.

### MOD3-02: Dependency Re-export Surface [2 pts] ‚úÖ
- [x] Introduced `src/deps.rs` (standard RSB pattern) re-exporting external crates we expect downstream users to consume (`age`, `rsb`, `hub`).
- [x] Documented optional/common re-exports and version guardrails in module docs.
- [x] Updated internal call sites to reference shared deps via `crate::deps` where beneficial.

### MOD3-03: Relocate Driver Example [1 pt] ‚úÖ
- [x] Move `src/driver.rs` demo into either `src/bin` or `examples/` to satisfy the "no stray top-level modules" rule in the module spec.
- [x] Update docs referencing the driver (if any) to the new path.
- [x] Ensure integration tests or demos still compile after relocation.

### MOD3-04: Harden PTY Automator [3 pts] ‚úÖ
- [x] Make PTY timeouts configurable (derive from `AgeConfig`) and avoid premature failures on long streams.
- [x] Improve prompt detection (case-insensitive / regex) and capture age stderr for debugging.
- [x] Audit error surfaces so PTY/TTY permission issues return actionable messages.
- [x] Evaluate non-blocking read strategy to remove busy-wait sleeps.

---

## Module Spec Refactor (MOD4 Series)

### MOD4-01: Reorganize Adapter Module [5 pts] üî¥
**Reference:** `docs/ref/rsb/MODULE_SPEC.md` ¬ß"Sub Module Specification"
- [ ] Create `src/cage/adapter/` directory with `mod.rs` orchestrator
- [ ] Move `adapter.rs` ‚Üí `src/cage/adapter/v1.rs`
- [ ] Move `adapter_v2.rs` ‚Üí `src/cage/adapter/v2.rs`
- [ ] Move `adapter_v2_pipe_passphrase.rs` ‚Üí `src/cage/adapter/pipe_passphrase.rs`
- [ ] Create `src/cage/adapter/error.rs` for adapter-specific errors
- [ ] Update `src/cage/mod.rs` to reference new structure
- [ ] Verify all tests pass after reorganization
**Rationale:** Multiple adapter files should be organized under a single module directory per MODULE_SPEC

### MOD4-02: Reorganize Security & Automation [3 pts] üî¥
**Reference:** `docs/ref/rsb/MODULE_SPEC.md` ¬ß"Sub Module Specification"
- [ ] Create `src/cage/security/` directory with `mod.rs`
- [ ] Move `security.rs` ‚Üí `src/cage/security/audit.rs`
- [ ] Move `passphrase.rs` ‚Üí `src/cage/security/passphrase.rs`
- [ ] Move `pty_wrap.rs` ‚Üí `src/cage/security/pty.rs`
- [ ] Move `tty_automation.rs` ‚Üí `src/cage/security/tty.rs`
- [ ] Create `src/cage/security/error.rs` for security-specific errors
- [ ] Update imports across codebase
**Rationale:** Security-related files scattered; should be cohesive module

### MOD4-03: Reorganize Core Primitives [3 pts] üî¥
**Reference:** `docs/ref/rsb/MODULE_SPEC.md` ¬ß"Sub Module Specification"
- [ ] Create `src/cage/core/` directory with `mod.rs`
- [ ] Move `age_engine.rs` ‚Üí `src/cage/core/engine.rs`
- [ ] Move `config.rs` ‚Üí `src/cage/core/config.rs`
- [ ] Move `requests.rs` ‚Üí `src/cage/core/requests.rs`
- [ ] Move `in_place.rs` ‚Üí `src/cage/core/recovery.rs`
- [ ] Create `src/cage/core/error.rs` for core errors
- [ ] Update imports and re-exports
**Rationale:** Core primitives should be grouped for clarity

### MOD4-04: Create Standard Module Files [2 pts] üî¥
**Reference:** `docs/ref/rsb/MODULE_SPEC.md` ¬ß"Module Layout"
- [ ] Create `src/cage/utils.rs` - curated low-level helpers
- [ ] Create `src/cage/helpers.rs` - internal implementations
- [ ] Create `src/cage/macros.rs` - module-owned macros
- [ ] Update `src/cage/mod.rs` to expose utils appropriately
- [ ] Document helper usage in module docs
**Rationale:** MODULE_SPEC requires standard helper/macro files

### MOD4-05: Move Strings to Lang Module [2 pts] üî¥
**Reference:** `docs/ref/rsb/MODULE_SPEC.md` ¬ß"Standard Src Specification"
- [ ] Move `src/cage/strings.rs` ‚Üí `src/lang.rs`
- [ ] Update all imports from `crate::cage::strings` to `crate::lang`
- [ ] Re-export via prelude if needed
- [ ] Verify SEC-01 string management patterns still work
**Rationale:** Per MODULE_SPEC, `src/lang.rs` is standard location for string constants

---

## Known Issues & Bug Tracking

### BUG-06: Flaky Streaming Test (test_shell_adapter_v2_stream_round_trip) [1 pt] üî¥
**Status:** Intermittent test failure introduced in CAGE-12 identity-based streaming work
**Symptoms:**
- Test passes when run individually: `cargo test --lib test_shell_adapter_v2_stream_round_trip`
- Fails when run with full test suite: `cargo test --lib`
- Error: "Pipe streaming requires identity file or CAGE_PASSPHRASE_PIPE=1 for passphrases"
**Root Cause:** Environmental variable pollution or timing issue with CAGE_STREAMING_STRATEGY
**Impact:** Non-blocking for MVP (87/88 tests pass, test validates passphrase streaming fallback)
**Priority:** Low - does not affect production usage
**Steps to Reproduce:**
```bash
cargo test --lib  # Fails
cargo test --lib test_shell_adapter_v2_stream_round_trip  # Passes
```
**Root Cause:** Tests run concurrently and share process-global environment variables
**Fix Required:**
1. Add `serial_test = "3.0"` dependency to Cargo.toml
2. Apply `#[serial]` attribute to all streaming tests, OR
3. Implement scoped EnvGuard struct (see China's egg.1.streaming-test-fix.txt)
**Temporary Workaround:** Test marked as `#[ignore]` (passes individually, fails in full suite)
**Location:** `src/cage/adapter_v2.rs:1445`
**Priority:** Low - non-blocking (test validates functionality, just needs isolation)

### BUG-07: Backup Retention Policy Inverted Logic [3 pts] ‚úÖ FIXED
**Status:** Resolved - retention logic corrected and tests updated
**Symptoms:**
- `test_backup_manager_with_retention`: Assertion "Oldest backup should have been deleted" fails
- `test_retention_keep_last_and_days`: Assertion "Should delete at least 1 old backup" fails
- 8/10 retention tests passing, 2 failing on assertion checks
**Root Cause:** Retention policy logic assumes **newest-first** ordering but backups are sorted **oldest-first**
**Details:**
- In `crud_manager.rs:633`, backups sorted by `created_at` ascending (oldest first)
- `KeepLast(n)` at line 136 returns `(keep_count..len)` which deletes **newest** items instead of oldest
- `KeepLastAndDays` at line 147 keeps `idx < last` which preserves **oldest** items instead of newest
**Fix Required:**
1. For `KeepLast(keep_count)`: Change to `(0..backups.len() - keep_count).collect()` to delete oldest
2. For `KeepLastAndDays { last, days }`: Change condition to `idx >= backups.len() - last` to keep newest
**Impact:** Blocks production use - retention policy deletes wrong backups
**Priority:** High - must fix before Ignite integration
**Steps to Reproduce:**
```bash
cargo test --test test_backup_retention test_backup_manager_with_retention
cargo test --test test_backup_retention test_retention_keep_last_and_days
```
**Resolution:**
1. Fixed `KeepLast(keep_count)` to delete oldest: `(0..backups.len() - keep_count)`
2. Fixed `KeepLastAndDays` to keep newest: `idx >= total.saturating_sub(*last)`
3. Added generation number as tiebreaker for identical timestamps
4. Fixed test assertions and incorrect test comments
5. Corrected misleading BackupEntry generation comment
**Commit:** (pending)
**Location:** `src/cage/lifecycle/crud_manager.rs:106-156, 532, 636-640`
**Test Files:** `tests/test_backup_retention.rs` (9/9 passing, 1 ignored)

### BUG-08: Backup Registry Path Tracking with Conflict Resolution [3 pts] ‚úÖ
**Status:** Resolved ‚Äì registry stays consistent after conflict renames (2025-09-30)
**Fixes:**
- Added `create_backup_internal()` so conflict relocations are surfaced before registration
- Updated registry via `update_backup_path()` when legacy backups shift paths
- Ensured conflict filenames include high-resolution timestamps with retry fallback
- Re-enabled `test_backup_manager_with_retention` with on-disk parity assertions
**Location:** `src/cage/lifecycle/crud_manager.rs` (backup creation, conflict path generator, registry helpers)
**Test:** `cargo test test_backup_manager_with_retention`

---

## Completed / Archived (for reference)
- BUG-01..05 ‚Äì Critical CLI regressions resolved mid-2025.
- CAGE-11a ‚Äì Identity/recipient request parity.
- INFRA-01 ‚Äì RSB terminal-ext integration.
- TEST-04 ‚Äì Age availability gating incorporated into selective unlock tests.

---

## Phase 4 ‚Äì Age Library Migration (Planned)

### AGE-01: Library Adapter Implementation [5 pts] üî¥
- [ ] Build a new adapter implementation that wraps `age::Encryptor` / `age::Decryptor` APIs for file and streaming workflows.
- [ ] Preserve request/response semantics so CageManager and request structs remain unchanged.
- [ ] Keep the existing shell-based adapter available as a fallback strategy until feature parity is validated.
**Implementation Notes:**
- Start with passphrase + recipient flows; reuse streaming helpers from `ShellAdapterV2`.
- Gate under config flag (`backend = "cli" | "library"`).
- Tests should compare CLI vs library ciphertext for regressions.

### AGE-02: Passphrase & Identity Bridging [3 pts] üî¥
- [ ] Reuse PassphraseManager/PTY automation to supply secrets directly to the age crate.
- [ ] Wire SSH identities and multi-file identity bundles through the crate‚Äôs recipients/identities API.
- [ ] Provide configuration flags to opt into either CLI or library backend per environment.

### AGE-03: Capability & Plugin Surface [3 pts] üî¥
- [ ] Mirror capability reporting (streaming, SSH, plugins, derived keys) using crate introspection instead of CLI probing.
- [ ] Detect available plugins (e.g., age-plugin-yubikey) when running via the library path and expose consistent health info.
- [ ] Document the fallback matrix so users understand when the CLI backend is still required.

### AGE-04: Parity Validation & Rollout [5 pts] üî¥
- [ ] Add regression suite comparing CLI-vs-library outputs for representative operations (passphrase, recipients, SSH, armor, streaming).
- [ ] Update docs (Library Usage, README) to describe backend selection and limitations.
- [ ] Graduate the library backend to default once test suite and UAT confirm parity; retain CLI path as optional escape hatch.

## Phase 3 ‚Äì Optional Enhancements (Backlog)

### CONFIG-01: TOML Recipient Group Convenience [3 pts] ‚è∏
- [ ] Formalize optional `recipient_groups` TOML schema for Cage users.
- [ ] Document usage as experimental (no CLI flag; config-only convenience).
- [ ] Ensure JSON registry (CAGE-03) remains the primary persistence path for Ignite/Padlock.
**Notes:** Optional backlog item for future polish; deprioritized relative to QA-02, CAGE-03, CAGE-12.

### CLI-01: RSB Flag Alignment [3 pts] ‚úÖ
- [x] Updated test suite to use correct RSB `--flag=value` syntax (equals sign required).
- [x] Verified all CLI flags work with request structs (lock/unlock operations validated).
- [x] All QA-02 smoke tests now passing with correct flag format.
**Notes:** Completed. Tests now use `--recipient=value` instead of `--opt-recipient value`. All BUG-01/04 regression tests re-enabled and passing.

### CLI-02: Setup Command Implementation [2 pts] üî¥
- [ ] Implement real behaviour for `cage init` (create config directories, scaffold `cage.toml`, report active path).
- [ ] Implement dependency checks for `cage install` (verify `age`, `age-keygen`, PTY prerequisites) with actionable output.
- [ ] Add smoke tests covering both commands and document workflows in `docs/procs/PROCESS.txt` / README.

## Phase 3 ‚Äì Optional Enhancements (Backlog)

### CONFIG-01: TOML Recipient Group Convenience [3 pts] ‚è∏
- [ ] Formalize optional `recipient_groups` TOML schema for Cage users.
- [ ] Document usage as experimental (no CLI flag; config-only convenience).
- [ ] Ensure JSON registry (CAGE-03) remains the primary persistence path for Ignite/Padlock.
**Notes:** Optional backlog item for future polish; deprioritized relative to QA-02, CAGE-03, CAGE-12.

### CLI-01: RSB Flag Alignment [3 pts] ‚úÖ
- [x] Updated test suite to use correct RSB `--flag=value` syntax (equals sign required).
- [x] Verified all CLI flags work with request structs (lock/unlock operations validated).
- [x] All QA-02 smoke tests now passing with correct flag format.
**Notes:** Completed. Tests now use `--recipient=value` instead of `--opt-recipient value`. All BUG-01/04 regression tests re-enabled and passing.
